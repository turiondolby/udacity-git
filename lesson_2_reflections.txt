> What happens when you initialize a repository? Why do you need to do it?

A hidden .git folder is created which sets up Git to track the files in it.

> How is the staging area different from the working directory and the 
	repository? What value do you think it offers?
	
Files that represent a logical change can be added to the staging area and then
be committed.

> How can you use the staging area to make sure you have one commit per logical 
	change?

By only adding those files that are related to the logical change.

> What are some situations when branches would be helpful in keeping your
	history organized? How would branches help?
	
New branches for demo features/localizations/alpha/beta versions.

> How do the diagrams help you visualize the branch structure?

It shows which previous commits are available and how new features can
be added in a  branch.

> What is the result of merging two branches together? Why do we represent it 
	in the diagram the way we do?
	
The features of the branch is incorporated into the merging branch.
It's a logical way of visualizing it.

> What are the pros and cons of Git’s automatic merging vs. always doing merges
	manually?

+ less work for user
+ no headaches

- time consuming
- headaches